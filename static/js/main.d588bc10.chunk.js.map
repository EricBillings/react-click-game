{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Image.js","App.js","index.js"],"names":["Wrapper","props","className","children","h3Style","margin","Header","style","gameScore","topScore","guessVerdict","playingOrNot","imageStyle","display","Image","key","id","src","image","alt","name","onClick","countImage","App","state","images","guesses","setState","push","checkSet","Set","length","instantScore","console","log","newImages","array","counter","index","Math","floor","random","temp","shuffle","this","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d588bc10.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nfunction Wrapper (props) {\r\nreturn <div className=\"wrapper\">{props.children}</div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default Wrapper","import React from \"react\"\r\n\r\nconst h3Style = {\r\n    margin: \"20px\"\r\n}\r\n\r\nfunction Header (props) {\r\n    return (\r\n    <div className=\"jumbotron text-center\">\r\n        {props.children}\r\n    <h1 className=\"display-1\">Clicky Game</h1>\r\n    <h3 style={h3Style}><div>Game Score: {props.gameScore}</div>\r\n    Top Score: {props.topScore}\r\n    </h3>\r\n    <h1>{props.guessVerdict}</h1>\r\n    <h4>{props.playingOrNot}</h4>\r\n\r\n    \r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nconst imageStyle = {\r\n    margin: \"10px\",\r\n    display: \"inline-block\"\r\n}\r\n\r\n\r\nfunction Image (props) {\r\n    return (\r\n        <div style={imageStyle}>\r\n\r\n            <img \r\n                key={props.id}\r\n                id={props.id}\r\n                src={props.image}\r\n                alt={props.name}\r\n                onClick={() => {props.countImage(props.id)}}\r\n            />\r\n        </div>        \r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Image","import React from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Image from \"./components/Image\";\nimport images from \"./images.json\"\n\n\n// From Stack Overflow //\nfunction shuffle(array) {\n  let counter = array.length;\n\n  while (counter > 0) {\n      let index = Math.floor(Math.random() * counter);\n      counter--;\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n  }\n\n  return array;\n}\n\n\nclass App extends React.Component {\n  state = {\n    images: images,\n    guesses: [],\n    gameScore: 0,\n    topScore: 0,\n    guessVerdict: \"Click an Image to Start\",\n    playingOrNot: \"Click on an Image to Score Points. If you Click on All of the Images Once, You Win. If you Click on any Image more than Once, You Lose\"\n};\n\n\n\ncountImage = id => {\nthis.setState({playingOrNot: \"\"})\nthis.state.guesses.push(id);\nconst checkSet = [...new Set(this.state.guesses)];\nif (checkSet.length === this.state.images.length) {\n  let instantScore = this.state.images.length;\n  this.setState({gameScore: instantScore})\n  this.setState({topScore: this.state.images.length})\n  this.setState({gameScore: 0})\n  this.setState({guesses: []})\n  this.setState({guessVerdict: \"You Won!\"})\n\n  console.log(\"You Win\")\n} else if \n  (checkSet.length === this.state.guesses.length) {\n  let instantScore = this.state.gameScore + 1;\n  this.setState({gameScore: instantScore})\n  this.setState({guessVerdict: \"Good Choice!\"})\n  console.log(\"Keep Playing\");\n} else if\n  (checkSet.length !== this.state.guesses.length) {\n  if (this.state.gameScore > this.state.topScore) {\n    this.setState({topScore: this.state.gameScore})\n  }\n  this.setState({gameScore: 0})\n  this.setState({guesses: []})\n  this.setState({guessVerdict: \"Bad Choice, You Lost!\"})\n  console.log(\"You Lose\")\n} else {\n  let instantScore = this.state.gameScore + 1;\n  this.setState({gameScore: instantScore})\n  this.setState({guessVerdict: \"How did this happen?\"})\n  console.log(\"Keep Playing\")\n}\n\n\n\n\nconst newImages = this.state.images;\nshuffle(newImages);\nthis.setState({images: newImages});\n\n};\n\n\n\n\nrender () {\n\n  const imageGalleryStyle = {\n    \"margin\": \"10px\",\n    \"text-align\": \"center\"\n\n  };\n\n\n  return (\n  \n    <Wrapper className=\"Container\">\n      <Header \n      guessVerdict={this.state.guessVerdict}\n      gameScore={this.state.gameScore}\n      topScore={this.state.topScore}\n      playingOrNot={this.state.playingOrNot}\n      />\n\n\n      <div style={imageGalleryStyle}>\n      {this.state.images.map(image => (\n      <Image  \n        key={image.id}\n        id={image.id}\n        name={image.name}\n        image={image.image}\n        countImage={() => {this.countImage(image.id)}}\n      />\n      ))}\n      </div>\n    </Wrapper>\n\n  );\n}\n\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}